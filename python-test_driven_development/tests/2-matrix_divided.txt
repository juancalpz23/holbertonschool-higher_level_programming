def matrix_divided(matrix, div):
    """
    Divide all elements of a matrix by a given divisor.

    Args:
        matrix (list of lists): The matrix containing integers or floats.
        div (number): The divisor, which must be a non-zero number.

    Returns:
        list of lists: A new matrix where each element is divided by the divisor,
                       rounded to 2 decimal places.

    Raises:
        TypeError: If the matrix is not a list of lists of integers or floats,
                   or if each row of the matrix does not have the same size,
                   or if the divisor is not a number.
        ZeroDivisionError: If the divisor is equal to 0.

    Example:
        >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
        >>> divisor = 2
        >>> result = matrix_divided(matrix, divisor)
        >>> print(result)
        [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

        >>> matrix_divided([[1, 2], [3, 4]], 2)
        [[0.5, 1.0], [1.5, 2.0]]

        >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0)
        Traceback (most recent call last):
            ...
        ZeroDivisionError: division by zero

        >>> matrix_divided([[1, 2], [3, 'four']], 2)
        Traceback (most recent call last):
            ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([[1, 2], [3, 4, 5]], 2)
        Traceback (most recent call last):
            ...
        TypeError: Each row of the matrix must have the same size
    """
    
    # Check if matrix is a list of lists of integers or floats
    if not all(isinstance(row, list) and all(isinstance(element, (int, float)) for element in row) for row in matrix):
        raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
    
    # Check if each row has the same size
    if not all(len(row) == len(matrix[0]) for row in matrix):
        raise TypeError("Each row of the matrix must have the same size")
    
    # Check if div is a number
    if not isinstance(div, (int, float)):
        raise TypeError("div must be a number")
    
    # Check if div is not equal to 0
    if div == 0:
        raise ZeroDivisionError("division by zero")
    
    # Divide all elements of the matrix by div, rounded to 2 decimal places
    result_matrix = [[round(element / div, 2) for element in row] for row in matrix]
    
    return result_matrix

# Run doctests
if __name__ == "__main__":
    import doctest
    doctest.testmod()